{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.getElementById('start-btn');\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n};\n\nconst startTimer = () => {\n  datetimePicker.disabled = true;\n  startButton.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        title: \"Time's up!\",\n        message: 'The countdown has ended.',\n        position: 'topRight',\n      });\n\n      datetimePicker.disabled = false;\n      startButton.disabled = true;\n    } else {\n      updateTimerDisplay(convertMs(timeRemaining));\n    }\n  }, 1000);\n};\n\nstartButton.addEventListener('click', startTimer);\n"],"names":["userSelectedDate","timerInterval","datetimePicker","startButton","flatpickr","selectedDates","iziToast","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","startTimer","timeRemaining"],"mappings":"0IAKA,IAAIA,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,eAAe,WAAW,EAEvDC,EAAUF,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrBL,EAAmBK,EAAc,CAAC,EAE9BL,EAAmB,IAAI,MACzBM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDH,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,MAAMI,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE7D,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAqB,CAAC,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAChE,SAAS,cAAc,aAAa,EAAE,YAAcP,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,CAC1B,EAEME,EAAa,IAAM,CACvBd,EAAe,SAAW,GAC1BC,EAAY,SAAW,GAEvBF,EAAgB,YAAY,IAAM,CAChC,MAAMgB,EAAgBjB,EAAmB,IAAI,KAEzCiB,GAAiB,GACnB,cAAchB,CAAa,EAC3Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChET,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,2BACT,SAAU,UAClB,CAAO,EAEDJ,EAAe,SAAW,GAC1BC,EAAY,SAAW,IAEvBY,EAAmBN,EAAUQ,CAAa,CAAC,CAE9C,EAAE,GAAI,CACT,EAEAd,EAAY,iBAAiB,QAASa,CAAU"}